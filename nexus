#!/usr/bin/env python3
"""
Nexus - Autonomous AI Agent CLI
Direct command-line interface similar to Claude Code

Usage:
  nexus [task description]
  nexus --interactive
  nexus --test
  nexus --web
"""

import sys
import os
import asyncio
from pathlib import Path

# Add the project root to Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

try:
    from run_nexus import main
except ImportError:
    # Fallback import
    import subprocess
    
    def main():
        """Fallback to running run-nexus.py directly"""
        script_path = project_root / "run-nexus.py"
        if script_path.exists():
            cmd = [sys.executable, str(script_path)] + sys.argv[1:]
            subprocess.run(cmd)
        else:
            print("‚ùå Error: Could not find run-nexus.py")
            sys.exit(1)

def parse_args():
    """Parse command line arguments"""
    if len(sys.argv) == 1:
        # No arguments - start interactive mode
        return ["--interactive"]
    
    args = sys.argv[1:]
    
    # Handle special flags
    if args[0] in ["--help", "-h"]:
        print_help()
        sys.exit(0)
    elif args[0] in ["--interactive", "-i"]:
        return ["--interactive"]
    elif args[0] in ["--test", "-t"]:
        return ["--test"]
    elif args[0] in ["--web", "-w"]:
        return ["--web"]
    elif args[0] in ["--version", "-v"]:
        print("Nexus Agent v2.0 - Autonomous AI Assistant")
        sys.exit(0)
    else:
        # Join all arguments as a single task
        task = " ".join(args)
        return ["--task", task]

def print_help():
    """Print help message"""
    help_text = """
ü§ñ Nexus - Autonomous AI Agent

Usage:
  nexus [task description]           Execute a single task
  nexus --interactive, -i            Start interactive mode
  nexus --test, -t                   Run demo tests
  nexus --web, -w                    Start web interface
  nexus --help, -h                   Show this help
  nexus --version, -v                Show version

Examples:
  nexus "Create a hello world script"
  nexus "What's the current date?"
  nexus "List all files in this directory"
  nexus "Create a Python project structure"
  nexus --interactive
  nexus --test

Features:
  ‚úÖ Sophisticated reasoning engine
  ‚úÖ Multi-step task planning
  ‚úÖ 21+ powerful tools
  ‚úÖ Security validation
  ‚úÖ Local operation (no API costs)

Documentation:
  üìö Read QUICK_START.md for setup
  üíª Read HOW_TO_CLI.md for detailed usage
  üöÄ Read HOW_TO_DEPLOY.md for deployment
"""
    print(help_text)

if __name__ == "__main__":
    try:
        # Parse arguments and run
        parsed_args = parse_args()
        
        # Update sys.argv for the main script
        sys.argv = [sys.argv[0]] + parsed_args
        
        # Run the main application
        main()
        
    except KeyboardInterrupt:
        print("\nüëã Goodbye!")
        sys.exit(0)
    except Exception as e:
        print(f"‚ùå Error: {e}")
        print("\nüí° Try: nexus --help")
        sys.exit(1)